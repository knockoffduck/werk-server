import { z } from "zod";

export const templateExerciseSchema = z.object({
  templateExerciseId: z.number().int().positive().optional(), // templateExerciseId is typically generated by the database
  templateId: z.number().int().positive(), // templateId is not null
  exerciseId: z.number().int().positive(), // exerciseId is not null
});

export const workoutTemplateSchema = z.object({
  templateId: z.number().int().positive().optional(), // templateId is typically generated by the database
  name: z.string().min(1), // name cannot be empty
  createdAt: z.date().optional(), // createdAt defaults in the database
});

export const exerciseSchema = z.object({
  exerciseId: z.number().int().positive().optional(), // exerciseId is typically generated by the database
  name: z.string().min(1), // name cannot be empty and should be unique (unique constraint is in the database)
  bodyPart: z.string().nullable().optional(), // bodyPart can be null
  category: z.string().nullable().optional(), // category can be null
  instructions: z.string().nullable().optional(), // instructions can be null
  imageUrl: z.string().url().nullable().optional(), // imageUrl can be null and should be a valid URL if present
  videoUrl: z.string().url().nullable().optional(), // videoUrl can be null and should be a valid URL if present
});

export type Exercise = z.infer<typeof exerciseSchema>;

export type WorkoutTemplate = z.infer<typeof workoutTemplateSchema>;

export type TemplateExercise = z.infer<typeof templateExerciseSchema>;
